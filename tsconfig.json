{
  "compilerOptions": {
    // куда идет сборка (для нас не так важно - указано в webpack)
    "outDir": "./dist/",

    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
    "noImplicitAny": true,

    // способы модульной сборки
    "module": "es6",

    // во что компилируется
    "target": "es5",
    "jsx": "react",
    "allowJs": true,
    // node or classic
    "moduleResolution": "node",
    
    // для абсолютного импорта
    // "baseUrl": ".",

    // esModuleInterop позволяет работать с пакетами, которые используют
    // common js как с обычными пакета с помощью import (require() module.export) = common js
    // import Moment from 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    // c флагом результат [object Object]
    // console.log(Moment);
    "esModuleInterop": true,

    // Если какая-либо библиотека не имеет default import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их
    // вместо такого импорта
    // import * as React from 'react';
    // можно писать такой
    // import React from 'react';
    "allowSyntheticDefaultImports": true,
    
  },

  // чтобы простой import some from 'some' работало с файлами ts
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}
